// $Id: disical.idl,v 1.23 2002/01/31 04:46:23 stepn Exp $
/*
 * Titel: disical.idl
 * Central Definitions for the CORBA-Objects (our CORBA-Interface...)
 * @author deafman
 * @version $Revision: 1.23 $
 */
module de {
  module cwrose {
	module disical {
	  module corba {
		module disiorb {

		  //	typedef int dbkey;
		  
		  /* Predefinitions */
		  interface User;
		  interface Date;
		  interface Invitation;
		  interface Invited;
		  
		  typedef sequence <Date> seqDate;
		  typedef sequence <Invitation> seqInvitation;
		  typedef sequence <User> seqUser;
		  typedef sequence <Invited> seqInvited;
		  
		  /* some exceptions has to pass the ORB */
		  exception wrongPwEx {};
		  exception jdoPersistenceEx {};
		  
		  /* ServerInterface */
		  interface Server {
			User createUser(in string login, 
							in string name, 
							in string pwd,
							in string email)
			  raises (jdoPersistenceEx);
			
			User login(in string login, 
					   in string pwd)
			  raises (wrongPwEx, jdoPersistenceEx);
			
			void destroy();
		  };
		  
		  /*	Userinterface */
		  interface User {
			
			void setLogin(in string login);
			void setName(in string name);
			void setEmail(in string email);
			void setPasswd(in string oldPW, in string newPW)
			  raises (wrongPwEx);
			
			string getLogin();
			string getName();
			string getEmail();

			/* persist the object */
			boolean persist();

			void deleteUser()
			  raises (jdoPersistenceEx);
			/* Date-fab for the User */
			Date createDate(in long long start, 
							in long long end, 
							in string location, 
							in string subject,
							in string description)
			  raises (jdoPersistenceEx);
			
			seqDate listDatesByTime(in long long start,
									in long long end)
			  raises (jdoPersistenceEx);
			
			seqDate listDatesByLocation(in string location)
			  raises (jdoPersistenceEx);
			
			seqDate listDatesBySubject(in string subject)
			  raises (jdoPersistenceEx);
			
			seqUser listAllUsers()
			  raises (jdoPersistenceEx);

			seqInvitation getInvitations()
			  raises (jdoPersistenceEx);

			Invitation createInvitation(in long long start, 
										in long long end, 
										in string subject, 
										in string location, 
										in string description)
			  raises (jdoPersistenceEx);
			
			/* destroy the corba-object in the poa */
			void destroy();
			
		  };



		  /* alle ersteinmal als string, kann noch verändert werden */
		  /* Dateinterface */
		  interface Date {
			
			void setStartTime(in long long Time);
			void setEndTime(in long long Time);
			void setLocation(in string location);
			void setSubject(in string subject);
			void setDescription(in string description);
			void setLogin(in User login);
			
			long long getStartTime();
			long long getEndTime();
			string getLocation();
			string getSubject();
			string getDescription();
			User getLogin();
			
			void setIndex(in long _index);
			long getIndex(); 
			
			boolean persist();

			void deleteDate()
			  raises (jdoPersistenceEx);

			void changeDate(in long long start,
							in long long end,
							in string location,
							in string subject)
			  raises (jdoPersistenceEx);
	      
			void destroy();
		  };

		  /* Interface Invitation */
		  interface Invitation {
			
			void invite (in User usr)
			  raises (jdoPersistenceEx);

			void setStartTime(in long long Time);
			void setEndTime(in long long Time);
			void setLocation(in string location);
			void setSubject(in string subject);
			void setDescription(in string description);
			void setFromUser(in User fromUser);

			long long getStartTime();
			long long getEndTime();
			string getLocation();
			string getSubject();
			string getDescription();
			User getFromUser();
			
			seqInvited getAllInvited()
			  raises (jdoPersistenceEx);
			seqInvited getAllNotifiedInv()
			  raises (jdoPersistenceEx);

			void delete()
			  raises (jdoPersistenceEx);
			
			boolean persist();
			
			void destroy();
		  };
		  
		  
		  /* Invited - Interface */
		  interface Invited {

			Invitation getInvitation();
			User getUser();
			Date getDate();

			void accept()
			  raises (jdoPersistenceEx);
			void reject()
			  raises (jdoPersistenceEx);
			short status();

			boolean persist();
		  };
		};
	  };
	};
  };
};

